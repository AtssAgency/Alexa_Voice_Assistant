; ============================================================
; Alexa (Local Voice Assistant) — Unified Configuration
; ------------------------------------------------------------
; One file for all services: MAIN, LOADER, LOGGER, RMS, KWD, STT, LLM, TTS
; All services bind to loopback (127.0.0.1). Ports must match specs.
; ============================================================

; -----------------------------
; MAIN (entrypoint: main.py)
; -----------------------------
[main]
log_level       = info                         ; forwarded to logger at bootstrap (info|debug)
logger_cmd      = python3 -m services.logger_service
loader_cmd      = python3 -m services.loader_service
wait_logger_ms  = 3000                         ; deadline for initial /log acceptance

; -----------------------------
; LOGGER SERVICE
; -----------------------------
[logger]
port                = 5000
log_level           = info                     ; info: storyline only | debug: echo all
dialog_prefix       = dialog_                  ; dialog_*.log
append_timestamps   = true                     ; timestamps in app.log & memory.log

; -----------------------------
; LOADER (process manager)
; -----------------------------
[loader]
startup_order       = logger,rms,kwd,stt,llm,tts
health_timeout_s    = 30
health_interval_ms  = 200
restart_backoff_ms  = 250,500,1000,2000        ; with ±20% jitter
crash_loop_threshold= 3                        ; failures within 60s => FAIL
port_hygiene        = true                     ; kill stale PID on port bind conflicts
vram_probe_cmd      = nvidia-smi --query-gpu=memory.used --format=csv,noheader,nounits
warmup_llm          = true
greeting_on_ready   = true                     ; call KWD /on-system-ready after all OK

[paths]
python              = python3

; Per-service launch definitions (used by loader)
[svc.logger]
name    = LOGGER
cmd     = %(python)s -m services.logger_service
port    = 5000

[svc.rms]
name    = RMS
cmd     = %(python)s -m services.rms_service
port    = 5006
health  = http://127.0.0.1:5006/health

[svc.kwd]
name    = KWD
cmd     = %(python)s -m services.kwd_service
port    = 5002
health  = http://127.0.0.1:5002/health

[svc.stt]
name    = STT
cmd     = %(python)s -m services.stt_service
port    = 5003
health  = http://127.0.0.1:5003/health

[svc.llm]
name    = LLM
cmd     = %(python)s -m services.llm_service
port    = 5004
health  = http://127.0.0.1:5004/health
warmup  = POST http://127.0.0.1:5004/warmup

[svc.tts]
name    = TTS
cmd     = %(python)s -m services.tts_service
port    = 5005
health  = http://127.0.0.1:5005/health

; -----------------------------
; RMS — Dynamic Background Noise
; -----------------------------
[rms]
bind_host           = 127.0.0.1
port                = 5006
sample_rate         = 16000                     ; Hz
frame_ms            = 50                        ; analysis hop
window_sec          = 30                        ; rolling avg window (constraint)
ema_alpha           = 0.2                       ; 0..1 smoothing on dBFS
noise_floor_mode    = p05                       ; min | p05 | p10
device              = default                   ; input device id/name
shared_mode         = true                      ; non-exclusive if supported
stats_interval_sec  = 5                         ; push snapshots to logger

[rms.deps]
logger_url          = http://127.0.0.1:5000

; -----------------------------
; KWD — Wake Word (openWakeWord)
; -----------------------------
[kwd]
bind_host           = 127.0.0.1
port                = 5002
model_path          = models/alexa_v0.1.onnx
base_rms_threshold  = 0.050                     ; pre-adaptation
cooldown_ms         = 1000
yes_phrases         = Yes?,Yes Master?,What's up?,I'm listening,Yo,Here!
greeting_text       = Hi Master. Ready to serve. ; spoken once after all services ready

[kwd.adaptive]
quiet_dbfs          = -60
noisy_dbfs          = -35
quiet_factor        = 0.80
noisy_factor        = 1.25

[kwd.deps]
logger_url          = http://127.0.0.1:5000
tts_url             = http://127.0.0.1:5005/speak
stt_url             = http://127.0.0.1:5003/start
rms_url             = http://127.0.0.1:5006/current-rms

; -----------------------------
; STT — Dialog Session Manager (faster-whisper)
; -----------------------------
[stt]
bind_host           = 127.0.0.1
port                = 5003
model_size          = small.en
device              = cuda                     ; cuda | cpu
compute_type        = int8_float16             ; minimize VRAM
beam_size           = 1
vad_finalize_sec    = 2.0
chunk_length_s      = 15.0
follow_up_timer_sec = 4.0
word_timestamps     = false

[stt.adaptive]
quiet_dbfs          = -60
noisy_dbfs          = -35

[stt.vad]
silence_margin_db   = 8.0
energy_delta_db     = 6.0

[stt.deps]
logger_url          = http://127.0.0.1:5000
llm_url             = http://127.0.0.1:5004/complete
tts_ws_speak        = ws://127.0.0.1:5005/speak-stream
tts_ws_events       = ws://127.0.0.1:5005/playback-events
kwd_url             = http://127.0.0.1:5002/start
rms_url             = http://127.0.0.1:5006/current-rms

; -----------------------------
; LLM — Streaming Completions (Ollama)
; -----------------------------
[llm]
bind_host           = 127.0.0.1
port                = 5004
ollama_base_url     = http://127.0.0.1:11434
request_timeout_s   = 120
warmup_enabled      = true
warmup_text         = ok

; Default sampling (can be overridden per request)
temperature         = 0.6
top_p               = 0.9
top_k               = 40
repeat_penalty      = 1.05
max_tokens          = 512

; NOTE: Model + SYSTEM prompt are taken from config/Modelfile (authoritative).

[llm.deps]
logger_url          = http://127.0.0.1:5000

; -----------------------------
; TTS — Streaming Speech (Kokoro)
; -----------------------------
[tts]
bind_host           = 127.0.0.1
port                = 5005
voice               = af_heart                 ; default voice (configurable)
sample_rate         = 24000
device              = cuda
dtype               = float16                  ; minimize VRAM
max_queue_text      = 64
max_queue_audio     = 8
chunk_chars         = 120
silence_pad_ms      = 60
allow_llm_pull      = false                    ; primary mode is STT push

[tts.deps]
logger_url          = http://127.0.0.1:5000
stt_ws_events_allow = true
