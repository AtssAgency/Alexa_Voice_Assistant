syntax = "proto3";

package aivoice.loader;

import "common.proto";
import "google/protobuf/empty.proto";

// Loader service for managing service lifecycle and dialog coordination
service LoaderService {
  // Service management
  rpc StartService(StartServiceRequest) returns (StartServiceResponse);
  rpc StopService(StopServiceRequest) returns (StopServiceResponse);
  rpc GetPids(google.protobuf.Empty) returns (GetPidsResponse);
  
  // Dialog management
  rpc HandleWakeWord(WakeWordEvent) returns (google.protobuf.Empty);
  rpc HandleDialogComplete(DialogCompleteEvent) returns (google.protobuf.Empty);
}

message StartServiceRequest {
  string service_name = 1;
}

message StartServiceResponse {
  bool success = 1;
  string message = 2;
  int32 pid = 3;
}

message StopServiceRequest {
  string service_name = 1;
}

message StopServiceResponse {
  bool success = 1;
  string message = 2;
}

message GetPidsResponse {
  map<string, int32> service_pids = 1;
}

message WakeWordEvent {
  string type = 1;  // "WAKE_DETECTED"
  float confidence = 2;
  string timestamp = 3;
  string dialog_id = 4;
}

message DialogCompleteEvent {
  string dialog_id = 1;
  string completion_reason = 2;  // "timeout", "error", "manual"
}